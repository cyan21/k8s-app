pipelines:
  - name: k8s_backapp_gradle
    configuration:
      environmentVariables:
        readOnly:
          myDemoVersion:  2.0.0
          grdlPromoteRepo: kaizoku-rc-grdl-local
    steps:
      - name: build_k8s_backapp_gradle
        type: GradleBuild
        configuration: 
          runtime:
            type: image
            image:
              custom:
                name: drydock/u18java
                tag: master
          gradleCommand:  clean artifactoryPublish -b build.gradle
          sourceLocation:       back/src  #required
          configFileLocation:   .  #required
          configFileName:       gradle-art-config  #required
          forceXrayScan:        false #optional
          autoPublishBuildInfo: true #optional
          inputResources:
            - name: src_code_k8s_backapp_gradle
          integrations:
            - name: artifactory_eu
          outputResources:
            - name: bi_k8s_backapp_gradle
        execution:
          onStart:
            - export JFROG_CLI_BUILD_URL="${int_artifactory_eu_url/%artifactory/ui}/pipelines/myPipelines/k8s_backapp_gradle/${run_number}/setup_env?branch=${res_src_code_k8s_backapp_gradle_branchName}"
          onSuccess:
            - echo ${res_src_code_k8s_backapp_gradle_isGitTag}
            - appVersion=`if [[ ${res_src_code_k8s_backapp_gradle_isGitTag} == "True" ]]; then echo ${res_src_code_k8s_backapp_gradle_gitTagName}; else echo ${res_src_code_k8s_backapp_gradle_commitSha}; fi`
            - echo $appVersion
            - add_run_variables appVersion="${appVersion}"
            - add_run_variables myDockerTag="${myAppVersion}-${res_src_code_k8s_backapp_gradle_commitSha}"
#            - add_run_variables subPath="${res_src_code_k8s_backapp_gradle_branchName}/${appVersion}"      

      - name: scan_bi_k8s_backapp_gradle
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: bi_k8s_backapp_gradle
              trigger: true

      - name: promote_bi_k8s_backapp_gradle
        type: PromoteBuild
        configuration:
          targetRepository: ${grdlPromoteRepo}
          includeDependencies: false
          status: SANDBOX_OK
          comment: Unit testing and Xray scan passed succesfully
          copy: false
          inputResources:
            - name: bi_k8s_backapp_gradle
              trigger: true
          inputSteps:
            - name: scan_bi_k8s_backapp_gradle
          outputResources:
            - name: bi_k8s_backapp_gradle_promoted_staging
        execution:  
          onStart:
            - echo ${res_bi_k8s_backapp_buildName} 
            - echo ${res_bi_k8s_backapp_buildNumber} 
          onSuccess:
            - jfrog rt sp --build=${res_bi_k8s_backapp_buildName}/${res_bi_k8s_backapp_buildNumber} ${grdlPromoteRepo}/ "app.version=${appVersion}"
            - write_output pb_k8s_backapp_gradle dockerAppTag=${myDockerTag}
            - write_output pb_k8s_backapp_gradle biNumber=${res_bi_k8s_backapp_buildNumber}


  - name: k8s_backapp_gradle_docker
    configuration:
      environmentVariables:
        readOnly:
          dockerPushRepo: kaizoku-docker
          dockerRepoUrl: kaizoku-docker.artifactory-eu-yannc3-0.soleng-emea-staging.jfrog.team:80
          myDockerImageName: ${dockerRepoUrl}/backapp-gradle
          dockerPromoteRepo: kaizoku-rc-docker-local
    steps:
      - name: setup_env
        type: Bash
        configuration:
          affinityGroup: together
          runtime:
            type: host
          inputResources:
            - name: pb_k8s_backapp_gradle
        execution:
          onExecute:
            - sudo mkdir -p /etc/docker 
            - > 
              sudo jq -n  "{\"insecure-registries\": [\"${dockerRepoUrl}\"]}" > /etc/docker/daemon.json
            - sudo systemctl restart docker
            - sudo cat /etc/docker/daemon.json
            - add_run_variables myTag=${res_pb_k8s_backapp_gradle_dockerAppTag}
            - add_run_variables biNumber=${res_pb_k8s_backapp_gradle_biNumber}
      - name: build_k8s_backapp_gradle_docker
        type: DockerBuild
        configuration:
          affinityGroup: together
          dockerFileName: jfrog-Dockerfile
          dockerFileLocation: back/CI/Docker/
          dockerImageName: ${myDockerImageName}
          dockerImageTag: ${myTag}
          inputSteps:
            - name: setup_env
          inputResources:
            - name: src_dockerfile_k8s_backapp_gradle
            - name: backapp_gradle_exec
          integrations:
            - name: artifactory_eu
        execution:
          onStart:
            - ls -la ${res_backapp_gradle_exec_resourcePath}
            - cp ${res_backapp_gradle_exec_resourcePath}/*.war ${res_src_dockerfile_k8s_backapp_gradle_resourcePath}/back/CI/Docker/
            - ls -la ${res_src_dockerfile_k8s_backapp_gradle_resourcePath}/back/CI/Docker/

      - name: publish_k8s_backapp_gradle_docker
        type: DockerPush
        configuration:
          affinityGroup: together
          targetRepository: ${dockerPushRepo}
          autoPublishBuildInfo: true
          inputSteps:
            - name: build_k8s_backapp_gradle_docker
          integrations:
            - name: artifactory_eu
          outputResources:
            - name: bi_k8s_backapp_gradle_docker
        execution:
          onSuccess:
            - echo "Job well done!"

  #     - name: xray_scan_docker_build_info_backapp
  #       type: Bash
  #       configuration:
  #         integrations:
  #           - name: artifactory
  #         affinityGroup: swampup
  #         inputResources:
  #           - name: build_info_docker_backapp
  #       execution:
  #         onStart:
  #           - echo ${res_build_info_docker_backapp_buildName}
  #           - echo ${res_build_info_docker_backapp_buildNumber}
  #           - jfrog rt bs ${res_build_info_docker_backapp_buildName} ${res_build_info_docker_backapp_buildNumber} --fail=false

  #     - name: promoting_docker_build_info_backapp
  #       type: PromoteBuild
  #       configuration:
  #         affinityGroup: swampup
  #         targetRepository: app-docker-rc-local
  #         includeDependencies: false
  #         status: "DOCKER_SCAN_OK"
  #         comment: "Xray scan passed succesfully"
  #         copy: "True"
  #         integrations:
  #           - name: artifactory
  #         inputResources:
  #           - name: build_info_docker_backapp
  #             trigger: true
  #         inputSteps:
  #           - name: xray_scan_docker_build_info_backapp
  #         outputResources:
  #           - name: build_info_docker_backapp_promoted_staging
  #       execution:
  #         onStart:
  #           - 'export ArtIP=$(echo ${int_artifactory_url}|awk -F ''/'' ''{print $3}'')'
  #           - echo ${res_build_info_docker_backapp_buildName}
  #           - echo ${res_build_info_docker_backapp_buildNumber}
  #           - jfrog rt cp --build=${res_build_info_docker_backapp_buildName}/${res_build_info_docker_backapp_buildNumber} app-docker-dev-local/ app-docker-rc-local/
  #         onSuccess:
  #           - jfrog rt sp --build=${res_build_info_docker_backapp_buildName}/${res_build_info_docker_backapp_buildNumber} app-docker-rc-local/**/manifest.json "docker.tag=${myDockerTag}"
  #           - write_output build_info_docker_backapp_promoted_staging "backregistry=\"${ArtIP}/app-docker-virtual\""
  #           - write_output build_info_docker_backapp_promoted_staging "backimage=\"backapp\""
  #           - write_output build_info_docker_backapp_promoted_staging "backtag=${myDockerTag}"