pipelines:
  - name: back_app_gradle_pipeline
    configuration:
      environmentVariables:
        readOnly:
          art_url: "http://artifactory-eu.soleng-emea-staging.jfrog.team/artifactory"
    steps:
      - name: build_app_gradle_backend
        type: GradleBuild
        configuration: 
          runtime:
            type: image
            image:
              custom:
                name: drydock/u18java
                tag: master
          gradleCommand:  clean artifactoryPublish -b build.gradle
          sourceLocation:       back/src  #required
          configFileLocation:   .  #required
          configFileName:       gradle-art-config  #required
          forceXrayScan:        false #optional
          autoPublishBuildInfo: false #optional
          inputResources:
            - name: src_code_back_app
          integrations:
            - name: artifactory_eu
        execution:
          onStart:
            - echo  "Preparing for work..."
          onSuccess:
            - echo ${res_src_code_back_app_isGitTag}
            - appVersion=`if [[ ${res_src_code_back_app_isGitTag} == "True" ]]; then echo ${res_src_code_back_app_gitTagName}; else echo ${res_src_code_back_app_commitSha}; fi`
            - echo $appVersion
            - add_pipeline_variables appVersion="${appVersion}"
            - add_pipeline_variables subPath="${res_src_code_back_app_branchName}/${appVersion}"      
          onFailure:
            - echo "You Lose"
          onComplete: #always
            - echo "Leave it as you found it. Let's clean it"

      - name: publish_backend_buildinfo
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: build_app_gradle_backend
          outputResources:
            - name: back_appBuildInfo
        execution:
          onStart:
            - echo "Preparing for Xray scan..."
          onSuccess:
            - echo build name / build number ${res_back_appBuildInfo_buildName} ${res_back_appBuildInfo_buildNumber}
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"

      - name: scan_gradle_back_app
        type: Bash
        configuration:
          integrations:
            - name: artifactory_eu
          inputResources:
            - name: back_appBuildInfo
              trigger: true
          outputResources:
            - name: back_appBuildInfo_scanned
        execution:
          onStart:
            - echo build name / build number ${res_back_appBuildInfo_buildName} ${res_back_appBuildInfo_buildNumber}
            - jfrog rt s gradle-release-local/*
            - jfrog rt bs ${res_back_appBuildInfo_buildName} ${res_back_appBuildInfo_buildNumber} --fail=false
          onExecute:
            - jfrog rt s gradle-release-local/*
            #- jfrog rt bs ${res_back_appBuildInfo_buildName} ${res_back_appBuildInfo_buildNumber}
            - jfrog rt bs ${res_back_appBuildInfo_buildName} ${res_back_appBuildInfo_buildNumber} --fail=false
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"

      - name: promote_build_info_gradle_back_app
        type: PromoteBuild
        configuration:
          targetRepository: app-gradle-rc-local
          includeDependencies: false
          status: SANDBOX_OK
          comment: Unit testing and Xray scan passed succesfully
          copy: false
          inputResources:
            - name: back_appBuildInfo_scanned
              trigger: true
          outputResources:
            - name: build_info_back_app_promoted
        execution:  
          onStart:
            - echo ${res_back_appBuildInfo_scanned_buildName} 
            - echo ${res_back_appBuildInfo_scanned_buildNumber} 
          onSuccess:
            - jfrog rt sp --build=${res_back_appBuildInfo_scanned_buildName}/${res_back_appBuildInfo_scanned_buildNumber} app-gradle-rc-local/ "app.version=${appVersion}"