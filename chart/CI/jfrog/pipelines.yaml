resources:
  - name: helmreporesource
    type: GitRepo
    configuration:
      gitProvider: yann_github
      path: cyan21/k8s-helm
 
  - name: helm_chart_resource
    type: HelmChart
    configuration:
      sourceArtifactory: artifactory_eu
      repository: helm-release
      chart: helmreporesource
      version: "1.0.${run_number}"

  - name: release_bundle_res
    type: ReleaseBundle
    configuration:
      sourceDistribution: tals_distribution
      name: helm_bundle
      version: "1.0.${run_number}"
      isSigned: false
      
  - name: signed_release_bundle_res
    type: ReleaseBundle
    configuration:
      sourceDistribution: tals_distribution
      name: helm_bundle
      version: "1.0.${run_number}"
      isSigned: true

  - name: dist_calculate_rule
    type: DistributionRule
    configuration:
      sourceDistribution: tals_distribution
      serviceName: ״HOME״
      siteName: "*"
      cityName: "Toulouse"
      countryCodes:
        - "*"      
    
pipelines:
  - name: helm_deployment
    steps:
      - name: publish_helm_chart
        type: HelmPublish
        configuration:
          environmentVariables: 
            version: ${run_number}
          inputResources:
            - name: helmreporesource
          outputResources:
            - name: helm_chart_resource
          chartPath: .
        execution:
          onStart:
            - cd ${res_helmreporesource_resourcePath}
            - helm lint
            - ls -la
            - cat Chart.yaml
            - sed -i "s/1.2.3/1.0.${version}/g" Chart.yaml
            - cat Chart.yaml
            #- kubectl version
            #- helm version

      - name: generate_release_bundle
        type: Bash
        configuration:
          environmentVariables: 
            version: ${run_number}          
          inputResources:
            - name: helmreporesource
          outputResources:
            - name: release_bundle_res
          inputSteps: 
           - name: publish_helm_chart
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.13.7"        
          integrations:
            - name: artifactory_eu
            - name: artSecret
        execution:
          onStart: 
            - jfrog --version
            - go version
          onExecute: 
            - git clone https://github.com/jfrog/release-bundle-generators
            - cd release-bundle-generators
            - ./build.sh
            - ./release-bundle-generator c --interactive=false --url=${int_artifactory_eu_url} --user=${int_artSecret_user} --apikey=${int_artSecret_apikey} art7 && ./release-bundle-generator use art7
            - ./release-bundle-generator from-chart --chart-path=helm/helmreporesource-1.0.${version}.tgz --dist-url=http://artifactory-eu.soleng-emea-staging.jfrog.team/distribution --docker-repo=app-docker-sit-local helm_bundle 1.0.${version}
 
      - name: sign_release_bundle
        type: SignReleaseBundle
        configuration:
          environmentVariables: 
            version: ${run_number}   
          inputSteps: 
           - name: generate_release_bundle     
          inputResources:
            - name: release_bundle_res
              trigger: false
          outputResources:
            - name: signed_release_bundle_res
            
      - name: distribute_release_bundle
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputSteps:
            - name: sign_release_bundle
          inputResources:
            #should update here current resource using write_output and not sign a new one
            - name: signed_release_bundle_res
            - name: dist_calculate_rule

      - name: deploy_helm_chart
        type: HelmDeploy
        configuration:
          integrations:
            - name: app_k8s_cluster_integration
          inputSteps: 
            - name: distribute_release_bundle
          inputResources:
            - name: helm_chart_resource
          releaseName: helmreporesource
          flags: "--namespace kube-system --cleanup-on-fail"
          valueFilePaths:
            - values.yaml
        #execution:
          #onStart:
            #- kubectl version
            #- helm version
