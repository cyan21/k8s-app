resources:
  - name: srcFrontRepo
    type: GitRepo
    configuration:
      gitProvider: hza_github
      path: HamzaZFrog/k8s-app
      branches:
        include: master
  - name: FrontAppBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory_eu
      buildName: FrontApp_Build
      buildNumber: ${run_number}

pipelines:
  - name: k8s_pipeline
    configuration:
      environmentVariables:
        readOnly:
          art_url: "http://artifactory-eu.soleng-emea-staging.jfrog.team/artifactory"
    steps:
      - name: npm_build_frontend
        type: NpmBuild
        configuration:
          repositoryName: npm
          sourceLocation: front/
          integrations:
            - name: artifactory_eu
          inputResources:
            - name: srcFrontRepo
        execution:
          onStart:
            - restore_cache_files npm_build_frontend_step_cache ${res_srcFrontRepo_resourcePath}/front/
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "You Lose"
          onComplete:
            - add_run_files ${res_srcFrontRepo_resourcePath}/front/ my_run_directory
            - add_cache_files ${res_srcFrontRepo_resourcePath}/front/ npm_build_frontend_step_cache
      
      - name: pack_frontend
        type: Bash
        configuration:
          inputSteps:
            - name: npm_build_frontend
          integrations:
            - name: artifactory_eu
        execution:
          onStart:
            - restore_run_files my_run_directory $step_tmp_dir
            - pushd $step_tmp_dir
            - npm run build
            - add_run_files $step_tmp_dir npmBuildInputGitRepo
     
      - name: publish_frontend
        type: NpmPublish
        configuration:
          repositoryName: npm-dev-local
          inputSteps:
            - name: pack_frontend
          integrations:
            - name: artifactory_eu
        execution:
          onStart:
            - export inputNpmBuildStepName="npm_build_frontend"
            - restore_run_files npmBuildInputGitRepo $step_tmp_dir
            - pushd $step_tmp_dir

      - name: build_app
        type: Bash
        configuration:
          environmentVariables:
            dockerImageName: artifactory-eu.soleng-emea-staging.jfrog.team/docker-local/frontapp
            dockerImageTag: ${run_number}
          inputResources:
            - name: srcFrontRepo
              trigger: false
          inputSteps:
            - name: publish_frontend
          integrations:
            - name: artifactory_eu
        execution:
          onStart:
            - rm -rf $run_dir/workspace/jfrog
            - retry_command jfrog rt config --url $int_myArtifactory _url --user $int_myArtifactory _user --apikey $int_myArtifactory _apikey --interactive=false
            - pushd $res_be_gitRepo_resourcePath
            - add_run_variables buildStepName=${step_name}
            - add_run_variables ${step_name}_buildNumber=${run_number}
            - add_run_variables ${step_name}_buildName=${pipeline_name}
            - docker build --pull --no-cache -t $dockerImageName:$dockerImageTag --build-arg REGISTRY=${int_myArtifactory _url} .
            - jfrog rt bce $pipeline_name $run_number
            - jfrog rt docker-push artifactory-eu.soleng-emea-staging.jfrog.team/docker-local/app:$run_number docker-local --build-name=$pipeline_name --build-number=$run_number
            - add_run_files /tmp/jfrog/. jfrog
 
      - name: publish_app_build
        type: PublishBuildInfo
        configuration:
          forceXrayScan: false
          inputSteps:
            - name: build_app
          outputResources:
            - name: appl_build_info
